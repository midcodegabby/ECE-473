Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
                              src/main.o (__do_copy_data)

There are no discarded input sections

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00008000         xr
data             0x00800100         0x00000a00         rw!x
eeprom           0x00810000         0x00000400         rw!x
fuse             0x00820000         0x00000003         rw!x
lock             0x00830000         0x00000400         rw!x
signature        0x00840000         0x00000400         rw!x
user_signatures  0x00850000         0x00000400         rw!x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
LOAD src/main.o
LOAD src/lcd/glyph.o
LOAD src/lcd/lcd.o
START GROUP
LOAD /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/libatmega32u4.a
END GROUP
                [0x00000000]                      __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x00008000]                      __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x00800100]                      __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x00000a00]                      __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x00000400]                      __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000003]                      __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                        __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                        __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                        __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x342
 *(.vectors)
 .vectors       0x00000000       0xac /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000ac                        . = ALIGN (0x2)
                0x000000ac                        __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000ac        0x0 linker stubs
 *(.trampolines*)
                0x000000ac                        __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000ac                        . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000ac                        __ctors_start = .
 *(.ctors)
                0x000000ac                        __ctors_end = .
                0x000000ac                        __dtors_start = .
 *(.dtors)
                0x000000ac                        __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x000000ac        0x0 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x000000ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000ac        0xc /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000b8       0x16 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
                0x000000b8                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ce        0x8 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x000000d6        0x4 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
                0x000000d6                __vector_38
                0x000000d6                __vector_22
                0x000000d6                __vector_28
                0x000000d6                __vector_1
                0x000000d6                __vector_32
                0x000000d6                __vector_34
                0x000000d6                __vector_24
                0x000000d6                __vector_12
                0x000000d6                __bad_interrupt
                0x000000d6                __vector_6
                0x000000d6                __vector_31
                0x000000d6                __vector_35
                0x000000d6                __vector_39
                0x000000d6                __vector_3
                0x000000d6                __vector_23
                0x000000d6                __vector_30
                0x000000d6                __vector_25
                0x000000d6                __vector_11
                0x000000d6                __vector_13
                0x000000d6                __vector_17
                0x000000d6                __vector_19
                0x000000d6                __vector_7
                0x000000d6                __vector_41
                0x000000d6                __vector_27
                0x000000d6                __vector_5
                0x000000d6                __vector_33
                0x000000d6                __vector_37
                0x000000d6                __vector_4
                0x000000d6                __vector_9
                0x000000d6                __vector_2
                0x000000d6                __vector_21
                0x000000d6                __vector_15
                0x000000d6                __vector_36
                0x000000d6                __vector_29
                0x000000d6                __vector_40
                0x000000d6                __vector_8
                0x000000d6                __vector_26
                0x000000d6                __vector_14
                0x000000d6                __vector_10
                0x000000d6                __vector_16
                0x000000d6                __vector_18
                0x000000d6                __vector_20
                0x000000d6                __vector_42
 .text          0x000000da        0x0 src/main.o
 .text          0x000000da       0x2e src/lcd/glyph.o
                0x000000da                ascii_to_glyph
 .text          0x00000108      0x202 src/lcd/lcd.o
                0x00000108                lcd_init
                0x00000162                lcd_on
                0x00000170                lcd_off
                0x0000017e                lcd_led_set
                0x00000184                lcd_volume_set
                0x0000019c                lcd_reset
                0x000001aa                lcd_sleep
                0x000001c0                lcd_wake
                0x000001d6                lcd_scroll
                0x000001e6                lcd_fill
                0x00000228                lcd_flush_text
                0x000002bc                lcd_flush_pixels
 .text          0x0000030a        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text          0x0000030a        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
                0x0000030a                        . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000030a       0x34 src/main.o
                0x0000030a                main
 .text.libgcc.mul
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
                0x0000033e                        . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000033e        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
                0x0000033e                exit
                0x0000033e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000033e        0x4 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000342                        . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000342                        _etext = .

.data           0x00800100      0x25c load address 0x00000342
                0x00800100                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .data          0x00800100       0x80 src/main.o
                0x00800100                text_buffer
 .data          0x00800180      0x1db src/lcd/glyph.o
                0x00800180                ascii_glyphs
 .data          0x0080035b        0x0 src/lcd/lcd.o
 .data          0x0080035b        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .data          0x0080035b        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0080035c                        . = ALIGN (0x2)
 *fill*         0x0080035b        0x1 
                0x0080035c                        _edata = .
                0x0080035c                        PROVIDE (__data_end = .)

.bss            0x0080035c        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0080035c        0x0 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0080035c        0x0 src/main.o
 .bss           0x0080035c        0x0 src/lcd/glyph.o
 .bss           0x0080035c        0x0 src/lcd/lcd.o
 .bss           0x0080035c        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_exit.o)
 .bss           0x0080035c        0x0 /usr/lib/gcc/avr/14.1.0/avr5/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x00000342                        __data_load_start = LOADADDR (.data)
                0x0000059e                        __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080035c        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0080035c                        _end = .
                [!provide]                        PROVIDE (__heap_start = .)
                [!provide]                        PROVIDE (__flmap_init_label = DEFINED (__flmap_noinit_start)?__flmap_noinit_start:0x0)
                [!provide]                        PROVIDE (__flmap = DEFINED (__flmap)?__flmap:0x0)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                        __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x12
 *(.comment)
 .comment       0x00000000       0x12 src/main.o
                                 0x13 (size before relaxing)
 .comment       0x00000012       0x13 src/lcd/glyph.o
 .comment       0x00000012       0x13 src/lcd/lcd.o

.note.gnu.avr.deviceinfo
                0x00000000       0x40
 .note.gnu.avr.deviceinfo
                0x00000000       0x40 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 src/main.o
 .debug_aranges
                0x00000020       0x20 src/lcd/glyph.o
 .debug_aranges
                0x00000040       0x20 src/lcd/lcd.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x16d5
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x9f4 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_info    0x000009f4      0x234 src/main.o
 .debug_info    0x00000c28      0x109 src/lcd/glyph.o
 .debug_info    0x00000d31      0x9a4 src/lcd/lcd.o

.debug_abbrev   0x00000000      0xe40
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x96a /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_abbrev  0x0000096a      0x196 src/main.o
 .debug_abbrev  0x00000b00       0xbf src/lcd/glyph.o
 .debug_abbrev  0x00000bbf      0x281 src/lcd/lcd.o

.debug_line     0x00000000      0xf1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000       0x1d /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_line    0x0000001d      0x101 src/main.o
 .debug_line    0x0000011e       0xae src/lcd/glyph.o
 .debug_line    0x000001cc      0xd4e src/lcd/lcd.o

.debug_frame    0x00000000      0x140
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 src/main.o
 .debug_frame   0x00000024       0x24 src/lcd/glyph.o
 .debug_frame   0x00000048       0xf8 src/lcd/lcd.o

.debug_str      0x00000000      0x59c
 *(.debug_str)
 .debug_str     0x00000000      0x371 /usr/lib/gcc/avr/14.1.0/../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_str     0x00000371      0x22b src/main.o
                                0x181 (size before relaxing)
 .debug_str     0x0000059c       0xf5 src/lcd/glyph.o
 .debug_str     0x0000059c      0x243 src/lcd/lcd.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
                0x00000000       0xe0
 *(.debug_line_str)
 .debug_line_str
                0x00000000       0xe0 src/main.o
                                 0xdb (size before relaxing)
 .debug_line_str
                0x000000e0       0xc2 src/lcd/glyph.o
 .debug_line_str
                0x000000e0      0x109 src/lcd/lcd.o

.debug_loclists
                0x00000000      0x2ec
 *(.debug_loclists)
 .debug_loclists
                0x00000000       0x51 src/main.o
 .debug_loclists
                0x00000051       0x34 src/lcd/glyph.o
 .debug_loclists
                0x00000085      0x267 src/lcd/lcd.o

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
                0x00000000       0x61
 *(.debug_rnglists)
 .debug_rnglists
                0x00000000       0x13 src/main.o
 .debug_rnglists
                0x00000013       0x4e src/lcd/lcd.o

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
OUTPUT(.elf elf32-avr)
LOAD linker stubs
